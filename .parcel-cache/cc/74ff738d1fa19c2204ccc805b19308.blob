"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _icons = _interopRequireDefault(require("url:../../img/icons.svg"));

var _view = _interopRequireDefault(require("./view.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class AddRecipeView extends _view.default {
  constructor() {
    super();

    _defineProperty(this, "_parentElement", document.querySelector('.upload'));

    _defineProperty(this, "_windowElement", document.querySelector('.add-recipe-window'));

    _defineProperty(this, "_overlayElement", document.querySelector('.overlay'));

    _defineProperty(this, "_btnOpen", document.querySelector('.nav__btn--add-recipe'));

    _defineProperty(this, "_btnClose", document.querySelector('.btn--close-modal'));

    this._addHandlerShowModal();

    this._addHandlerCloseModal();
  }

  _addHandlerShowModal() {
    this._btnOpen.addEventListener('click', this.toggleModal.bind(this));
  }

  _addHandlerCloseModal() {
    this._btnClose.addEventListener('click', this.toggleModal.bind(this));

    this._overlayElement.addEventListener('click', this.toggleModal.bind(this));
  }

  addHandlerUpload() {
    this._parentElement.addEventListener('submit', function (e) {
      e.preventDefault();
      const data = [new FormData(this)];
      console.log(data);
    });
  }

  toggleModal() {
    this._overlayElement.classList.toggle('hidden');

    this._windowElement.classList.toggle('hidden');
  }

  _generateMarkUp() {}

}

var _default = new AddRecipeView();

exports.default = _default;